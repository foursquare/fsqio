<%
  // Copyright 2017 Foursquare Labs Inc. All Rights Reserved.

  import _root_.io.fsq.spindle.codegen.runtime.{ScalaClass, StructLike, TypeReferenceResolver}
  import _root_.io.fsq.spindle.__shaded_for_spindle_bootstrap__.descriptors.Struct
%>
<%@ val cls: StructLike %>
<%@ val pkg: String %>
<%@ val resolver: TypeReferenceResolver %>
object ${cls.name} {
<%
  val rawArgsStruct = Struct.newBuilder.name("Struct").__fields(cls.__fields).__annotations(cls.__annotations).result()
  val argsStruct = new ScalaClass(rawArgsStruct, resolver) {
    override val isException: Boolean = true
    override val generateProxy: Boolean = true
  }
  val clsContainer = cls.name
  render("class.ssp", Map("cls" -> argsStruct, "clsContainer" -> clsContainer, "pkg" -> pkg))
%>

  def createRawRecord: ${cls.name}
  def newBuilder: Struct.Builder.AllUnspecified
}
class ${cls.name}(msg: String) extends RuntimeException(msg) with ${cls.name}.StructProxy {
  def this() = this(null: String)
  def this(underlying: ${cls.name}.Struct) = {
    this(underlying.toString)
  }
  def this(msg: String, cause: Throwable) = {
    this(msg)
  }
  def this(cause: Throwable) = {
    this(null: String)
  }

  def deepMergeCopy(that: ${cls.name}): ${cls.name}
}
