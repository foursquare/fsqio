<%
  // Copyright 2017 Foursquare Labs Inc. All Rights Reserved.
  import _root_.io.fsq.spindle.codegen.runtime.StructLike
  import _root_.scala.collection.mutable.Set
%>
<%@ val cls: StructLike %>
<%@ val clsContainer: String %>
<%@ val pkg: String %>

trait ${cls.name} extends runtime.Record[${cls.name}]
#for (pkField <- cls.primaryKeyField)
  with runtime.HasPrimaryKey[${pkField.renderType.textUnscoped}, ${cls.name}]
#end
  with Ordered[${cls.name}]
  with thrift.TBase[${cls.name}, ${cls.name}._Fields] {
#for (field <- cls.fields)
<% render(field.renderType.fieldDefTemplate, Map("field" -> field, "pkg" -> pkg)) %>
#end
#if (cls.generateMutable)
<% render("class_traits_mutablecopy.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#end
<% render("class_traits_copy.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#if (cls.generateMutable)
<% render("class_traits_mutable.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#end
#if (cls.fields.exists(_.builderRequired))
  def toBuilder(): ${cls.name}.Builder.AllSpecified
#else
  def toBuilder(): ${cls.name}.Builder[Any]
#end
<% render("class_traits_deepmergecopy.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#if (cls.isException)
  def toException: ${clsContainer}
#end
}
#if (cls.generateMutable)
<% render("class_traits_mutablet.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#end
#if (cls.generateProxy)
<% render("class_traits_proxyt.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#if (cls.generateMutable)
<% render("class_traits_mutable_proxyt.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#end
#end
#if (cls.generateLiftAdapter)
<% render("class_traits_lift_adapter.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#if (cls.generateMutable)
<% render("class_traits_lift_adapter_mutable.ssp", Map("cls" -> cls, "pkg" -> pkg)) %>
#end
#end
